; vim: filetype=nasm

%ifndef ASM_FUNC_MAC
%define ASM_FUNC_MAC

%macro prologue 0
   push rbp
   mov  rbp, rsp
%endmacro

%macro pushargs 1-4
    %rep %0
        push %1
        %rotate 1
    %endrep
%endmacro

%macro getargs 1
    %define %1 rbp+16
%endmacro

%macro getargs 2
    getargs %1
    %define %2 rbp+24
%endmacro

%macro getargs 3
    getargs %1, %2
    %define %3 rbp+32
%endmacro

%macro getargs 4
    getargs %1, %2, %3
    %define %4 rbp+40
%endmacro

%macro call_func 1-5
    %if %0 == 2
        pushargs %2
    %elif %0 == 3
		pushargs %2, %3
	%elif %0 == 4
		pushargs %2, %3, %4
	%elif %0 == 5
		pushargs %2, %3, %4, %5
	%endif
		
	call %1
	add rsp, (%0-1)*8
%endmacro

%macro func 1-5
    %1:
    
	%push
    prologue
    
    %if %0 == 2
        getargs %2
	%elif %0 == 3
		getargs %2, %3
	%elif %0 == 4
		getargs %2, %3, %4
	%elif %0 == 5
		getargs %2, %3, %4, %5
	%endif
    
%endmacro

;TODO: and need to add 'leave' right here --
%macro endfunc 0                        ;   |
    %pop                                ;   |
    leave
	ret                                 ; <-- 
%endmacro

%macro str 2
    %1:     db %2
    %1.len: equ $-%1
%endmacro

%endif
